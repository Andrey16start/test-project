{"ast":null,"code":"// get date by timezone offset\n// or get date by utcDate with localTimezoneOffset\nexport default (function () {\n  var timezoneOffset = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  var utcDate = arguments.length > 1 ? arguments[1] : undefined;\n  // timezoneOffset in minutes\n  // localTimezoneOffset convert to hours\n  var localTimezoneOffset = new Date().getTimezoneOffset() * -60000;\n  var UTCDate = new Date() - localTimezoneOffset;\n\n  if (utcDate) {\n    // if date like \"2020-04-08 09:57:05\" its already UTC date\n    if (typeof utcDate === 'string' || utcDate instanceof String) {\n      UTCDate = new Date(utcDate);\n    } // if date in timestamp we need to calc with our localTimezoneOffset\n    else {\n        UTCDate = new Date(utcDate) - localTimezoneOffset;\n      }\n  }\n\n  return new Date(UTCDate - timezoneOffset * -60000);\n});","map":{"version":3,"sources":["/home/andrey/Projects/test/src/utils/getDateByTimezoneOffset.js"],"names":["timezoneOffset","utcDate","localTimezoneOffset","Date","getTimezoneOffset","UTCDate","String"],"mappings":"AAAA;AACA;AACA,gBAAe,YAAiC;AAAA,MAAhCA,cAAgC,uEAAf,CAAe;AAAA,MAAZC,OAAY;AAAE;AAChD;AACA,MAAMC,mBAAmB,GAAG,IAAIC,IAAJ,GAAWC,iBAAX,KAAiC,CAAC,KAA9D;AAEA,MAAIC,OAAO,GAAG,IAAIF,IAAJ,KAAaD,mBAA3B;;AAEA,MAAID,OAAJ,EAAa;AACX;AACA,QAAI,OAAOA,OAAP,KAAmB,QAAnB,IAA+BA,OAAO,YAAYK,MAAtD,EAA8D;AAC5DD,MAAAA,OAAO,GAAG,IAAIF,IAAJ,CAASF,OAAT,CAAV;AACD,KAFD,CAGA;AAHA,SAIK;AACHI,QAAAA,OAAO,GAAG,IAAIF,IAAJ,CAASF,OAAT,IAAoBC,mBAA9B;AACD;AACF;;AAED,SAAO,IAAIC,IAAJ,CAASE,OAAO,GAAGL,cAAc,GAAG,CAAC,KAArC,CAAP;AACD,CAlBD","sourcesContent":["// get date by timezone offset\n// or get date by utcDate with localTimezoneOffset\nexport default (timezoneOffset = 0, utcDate) => { // timezoneOffset in minutes\n  // localTimezoneOffset convert to hours\n  const localTimezoneOffset = new Date().getTimezoneOffset() * -60000;\n\n  let UTCDate = new Date() - localTimezoneOffset;\n\n  if (utcDate) {\n    // if date like \"2020-04-08 09:57:05\" its already UTC date\n    if (typeof utcDate === 'string' || utcDate instanceof String) {\n      UTCDate = new Date(utcDate);\n    }\n    // if date in timestamp we need to calc with our localTimezoneOffset\n    else {\n      UTCDate = new Date(utcDate) - localTimezoneOffset;\n    }\n  }\n\n  return new Date(UTCDate - timezoneOffset * -60000);\n}\n"]},"metadata":{},"sourceType":"module"}