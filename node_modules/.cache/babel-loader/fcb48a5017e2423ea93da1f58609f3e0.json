{"ast":null,"code":"import _objectWithoutProperties from \"/home/andrey/Projects/test/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"/home/andrey/Projects/test/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/andrey/Projects/test/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/andrey/Projects/test/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/andrey/Projects/test/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/andrey/Projects/test/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/andrey/Projects/test/src/components/LazyLoadImage/LazyLoadImage.js\";\nimport React, { Component } from 'react';\nimport Spinner from '../Spinner/Spinner';\nimport './LazyLoadImage.scss'; // Use for images that are already on the page\n// \n// Example: \n//     <LazyLoadImage\n//       src=\"\"                   :str \n//      />\n\nvar LazyLoadImage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(LazyLoadImage, _Component);\n\n  function LazyLoadImage() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, LazyLoadImage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(LazyLoadImage)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      imageLoaded: false\n    };\n\n    _this.handleImageLoaded = function () {\n      _this.setState({\n        imageLoaded: true,\n        error: ''\n      });\n    };\n\n    _this.handleImageErrored = function () {\n      _this.setState({\n        error: \"Failed to load image...\",\n        imageLoaded: true\n      });\n    };\n\n    _this.renderSpinner = function () {\n      return _this.state.imageLoaded // false\n      ? null : React.createElement(Spinner, {\n        spinnerSize: _this.props.spinnerSize,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      });\n    };\n\n    _this.renderError = function (props) {\n      return _this.state.error ? React.createElement(\"img\", Object.assign({}, props, {\n        className: \"lazy-load__error\",\n        alt: \"error\",\n        title: _this.state.error,\n        \"data-image\": true,\n        src: \"/media/error.png\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      })) : null;\n    };\n\n    return _this;\n  }\n\n  _createClass(LazyLoadImage, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          alt = _this$props.alt,\n          className = _this$props.className,\n          onClick = _this$props.onClick,\n          spinnerSize = _this$props.spinnerSize,\n          restProps = _objectWithoutProperties(_this$props, [\"alt\", \"className\", \"onClick\", \"spinnerSize\"]);\n\n      var activeClass = !this.state.error && this.state.imageLoaded ? \"lazy-load__image\" : \"lazy-load__image--hidden\";\n      var propsClass = className ? className : '';\n      return React.createElement(\"div\", {\n        className: \"lazy-load__container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, this.renderSpinner(), this.renderError(restProps), React.createElement(\"img\", Object.assign({}, restProps, {\n        alt: alt ? alt : \"lazy\",\n        className: \"\".concat(activeClass, \" \").concat(propsClass),\n        onClick: onClick,\n        onLoad: this.handleImageLoaded,\n        \"data-image\": true,\n        onError: this.handleImageErrored,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return LazyLoadImage;\n}(Component);\n\nexport default LazyLoadImage;","map":{"version":3,"sources":["/home/andrey/Projects/test/src/components/LazyLoadImage/LazyLoadImage.js"],"names":["React","Component","Spinner","LazyLoadImage","state","imageLoaded","handleImageLoaded","setState","error","handleImageErrored","renderSpinner","props","spinnerSize","renderError","alt","className","onClick","restProps","activeClass","propsClass"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAO,sBAAP,C,CAGA;AACA;AACA;AACA;AACA;AACA;;IACMC,a;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,WAAW,EAAE;AADP,K;;UAIRC,iB,GAAoB,YAAM;AACxB,YAAKC,QAAL,CAAc;AACZF,QAAAA,WAAW,EAAE,IADD;AAEZG,QAAAA,KAAK,EAAE;AAFK,OAAd;AAID,K;;UAEDC,kB,GAAqB,YAAM;AACzB,YAAKF,QAAL,CAAc;AACZC,QAAAA,KAAK,EAAE,yBADK;AAEZH,QAAAA,WAAW,EAAE;AAFD,OAAd;AAID,K;;UAEDK,a,GAAgB;AAAA,aACd,MAAKN,KAAL,CAAWC,WAAX,CACE;AADF,QAEI,IAFJ,GAGI,oBAAC,OAAD;AAAS,QAAA,WAAW,EAAE,MAAKM,KAAL,CAAWC,WAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJU;AAAA,K;;UAOhBC,W,GAAc,UAACF,KAAD;AAAA,aACZ,MAAKP,KAAL,CAAWI,KAAX,GACI,6CACIG,KADJ;AAEA,QAAA,SAAS,EAAC,kBAFV;AAGA,QAAA,GAAG,EAAC,OAHJ;AAIA,QAAA,KAAK,EAAE,MAAKP,KAAL,CAAWI,KAJlB;AAKA,0BALA;AAMA,QAAA,GAAG,EAAC,kBANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADJ,GAQI,IATQ;AAAA,K;;;;;;;6BAYL;AAAA,wBACwD,KAAKG,KAD7D;AAAA,UACCG,GADD,eACCA,GADD;AAAA,UACMC,SADN,eACMA,SADN;AAAA,UACiBC,OADjB,eACiBA,OADjB;AAAA,UAC0BJ,WAD1B,eAC0BA,WAD1B;AAAA,UAC0CK,SAD1C;;AAGP,UAAMC,WAAW,GAAG,CAAC,KAAKd,KAAL,CAAWI,KAAZ,IAAqB,KAAKJ,KAAL,CAAWC,WAAhC,GAChB,kBADgB,GAEhB,0BAFJ;AAGA,UAAMc,UAAU,GAAGJ,SAAS,GACxBA,SADwB,GAExB,EAFJ;AAIA,aACE;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKL,aAAL,EADH,EAEG,KAAKG,WAAL,CAAiBI,SAAjB,CAFH,EAIE,6CACMA,SADN;AAEE,QAAA,GAAG,EAAEH,GAAG,GAAGA,GAAH,GAAS,MAFnB;AAGE,QAAA,SAAS,YAAKI,WAAL,cAAoBC,UAApB,CAHX;AAIE,QAAA,OAAO,EAAEH,OAJX;AAKE,QAAA,MAAM,EAAE,KAAKV,iBALf;AAME,0BANF;AAOE,QAAA,OAAO,EAAE,KAAKG,kBAPhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAJF,CADF;AAeD;;;;EA/DyBR,S;;AAkE5B,eAAeE,aAAf","sourcesContent":["import React, { Component } from 'react'\n\nimport Spinner from '../Spinner/Spinner';\nimport './LazyLoadImage.scss'\n\n\n// Use for images that are already on the page\n// \n// Example: \n//     <LazyLoadImage\n//       src=\"\"                   :str \n//      />\nclass LazyLoadImage extends Component {\n  state = {\n    imageLoaded: false\n  };\n\n  handleImageLoaded = () => {\n    this.setState({\n      imageLoaded: true,\n      error: ''\n    })\n  }\n\n  handleImageErrored = () => {\n    this.setState({\n      error: \"Failed to load image...\",\n      imageLoaded: true\n    });\n  }\n\n  renderSpinner = () => (\n    this.state.imageLoaded\n      // false\n      ? null\n      : <Spinner spinnerSize={this.props.spinnerSize} />\n  )\n\n  renderError = (props) => (\n    this.state.error\n      ? <img\n        {...props}\n        className=\"lazy-load__error\"\n        alt=\"error\"\n        title={this.state.error}\n        data-image\n        src=\"/media/error.png\" />\n      : null\n  )\n\n  render() {\n    const { alt, className, onClick, spinnerSize, ...restProps } = this.props;\n\n    const activeClass = !this.state.error && this.state.imageLoaded\n      ? \"lazy-load__image\"\n      : \"lazy-load__image--hidden\";\n    const propsClass = className\n      ? className\n      : '';\n\n    return (\n      <div className=\"lazy-load__container\">\n        {this.renderSpinner()}\n        {this.renderError(restProps)}\n\n        <img\n          {...restProps}\n          alt={alt ? alt : \"lazy\"}\n          className={`${activeClass} ${propsClass}`}\n          onClick={onClick}\n          onLoad={this.handleImageLoaded}\n          data-image\n          onError={this.handleImageErrored} />\n      </div>\n    );\n  }\n}\n\nexport default LazyLoadImage;"]},"metadata":{},"sourceType":"module"}