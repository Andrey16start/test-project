{"ast":null,"code":"import _defineProperty from \"/home/andrey/Projects/test/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nexport var GET_ERRORS = 'GET_ERRORS';\nexport var CLEAR_ERRORS = 'CLEAR_ERRORS';\nexport var deleteServerErrors = function deleteServerErrors() {\n  return function (dispatch) {\n    dispatch({\n      type: CLEAR_ERRORS,\n      payload: null\n    });\n  };\n};\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case GET_ERRORS:\n      {\n        return _objectSpread({}, action.payload);\n      }\n\n    case CLEAR_ERRORS:\n      {\n        return {};\n      }\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/home/andrey/Projects/test/src/ducks/errors.js"],"names":["GET_ERRORS","CLEAR_ERRORS","deleteServerErrors","dispatch","type","payload","state","action"],"mappings":";;;;;;AAAA,OAAO,IAAMA,UAAU,GAAG,YAAnB;AACP,OAAO,IAAMC,YAAY,GAAG,cAArB;AAGP,OAAO,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB;AAAA,SAAM,UAAAC,QAAQ,EAAI;AAClDA,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEH,YADC;AAEPI,MAAAA,OAAO,EAAE;AAFF,KAAD,CAAR;AAID,GALiC;AAAA,CAA3B;AAOP,gBAAe,YAAwB;AAAA,MAAvBC,KAAuB,uEAAf,EAAe;AAAA,MAAXC,MAAW;;AACrC,UAAQA,MAAM,CAACH,IAAf;AACE,SAAKJ,UAAL;AAAiB;AACf,iCACKO,MAAM,CAACF,OADZ;AAGD;;AACD,SAAKJ,YAAL;AAAmB;AACjB,eAAO,EAAP;AACD;;AACD;AACE,aAAOK,KAAP;AAVJ;AAYD,CAbD","sourcesContent":["export const GET_ERRORS = 'GET_ERRORS';\nexport const CLEAR_ERRORS = 'CLEAR_ERRORS';\n\n\nexport const deleteServerErrors = () => dispatch => {\n  dispatch({\n    type: CLEAR_ERRORS,\n    payload: null\n  });\n}\n\nexport default (state = {}, action) => {\n  switch (action.type) {\n    case GET_ERRORS: {\n      return {\n        ...action.payload\n      }\n    }\n    case CLEAR_ERRORS: {\n      return {}\n    }\n    default:\n      return state;\n  }\n}"]},"metadata":{},"sourceType":"module"}