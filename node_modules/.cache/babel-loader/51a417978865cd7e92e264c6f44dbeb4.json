{"ast":null,"code":"import _slicedToArray from \"/home/andrey/Projects/test/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/andrey/Projects/test/src/App.js\";\nimport React, { useState } from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport \"./App.css\";\nimport PrivateRoute from \"./components/PrivateRoute/PrivateRoute\";\nimport MainPage from \"./scenes/MainPage/MainPage\";\nimport NotFound from \"./scenes/NotFound/NotFound\";\nimport useDidMount from \"./hooks/useDidMount\";\nimport Navbar from \"./containers/Navbar/Navbar\";\nimport LoginPage from \"./scenes/LoginPage/LoginPage\";\nimport Spinner from \"./components/Spinner/Spinner\";\n\nvar PrivateRoutes = function PrivateRoutes(props) {\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isPagePending = _useState2[0],\n      setPagePending = _useState2[1];\n\n  useDidMount(function () {\n    if (!localStorage.isLoggedIn) {\n      props.history.push('/login');\n    } else {\n      setPagePending(false);\n    }\n  });\n\n  if (isPagePending) {\n    return React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(\"div\", {\n    className: \"main-page\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(Navbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    component: MainPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), React.createElement(Redirect, {\n    to: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  })));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {};\n};\n\nvar mapDispatchToProps = {};\nvar ConnectedPrivateRoute = connect(mapStateToProps, mapDispatchToProps)(PrivateRoutes);\n\nvar App = function App() {\n  return React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(Route, {\n    path: \"/login\",\n    component: LoginPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), React.createElement(PrivateRoute, {\n    path: \"/\",\n    component: ConnectedPrivateRoute,\n    isAuthenticated: !!localStorage.isLoggedIn,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/not-found\",\n    component: NotFound,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }), React.createElement(Redirect, {\n    to: \"/not-found\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/andrey/Projects/test/src/App.js"],"names":["React","useState","Route","Switch","Redirect","connect","PrivateRoute","MainPage","NotFound","useDidMount","Navbar","LoginPage","Spinner","PrivateRoutes","props","isPagePending","setPagePending","localStorage","isLoggedIn","history","push","mapStateToProps","state","mapDispatchToProps","ConnectedPrivateRoute","App"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,kBAAxC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAO,WAAP;AACA,OAAOC,YAAP,MAAyB,wCAAzB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,SAAP,MAAsB,8BAAtB;AACA,OAAOC,OAAP,MAAoB,8BAApB;;AAGA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAW;AAAA,kBACSb,QAAQ,CAAC,IAAD,CADjB;AAAA;AAAA,MACxBc,aADwB;AAAA,MACTC,cADS;;AAG/BP,EAAAA,WAAW,CAAC,YAAM;AAChB,QAAI,CAACQ,YAAY,CAACC,UAAlB,EAA8B;AAC5BJ,MAAAA,KAAK,CAACK,OAAN,CAAcC,IAAd,CAAmB,QAAnB;AACD,KAFD,MAGK;AACHJ,MAAAA,cAAc,CAAC,KAAD,CAAd;AACD;AACF,GAPU,CAAX;;AASA,MAAID,aAAJ,EAAmB;AACjB,WAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAED,SACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAGE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,GAAlB;AAAsB,IAAA,SAAS,EAAER,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAGE,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CAHF,CADF;AAWD,CA3BD;;AA6BA,IAAMc,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD;AAAA,SAAY,EAAZ;AAAA,CAAxB;;AAIA,IAAMC,kBAAkB,GAAG,EAA3B;AAIA,IAAMC,qBAAqB,GAAGnB,OAAO,CAACgB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CV,aAA7C,CAA9B;;AAGA,IAAMY,GAAG,GAAG,SAANA,GAAM,GAAM;AAChB,SACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,SAAS,EAAEd,SAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAGE,oBAAC,YAAD;AACE,IAAA,IAAI,EAAC,GADP;AAEE,IAAA,SAAS,EAAEa,qBAFb;AAGE,IAAA,eAAe,EAAE,CAAC,CAACP,YAAY,CAACC,UAHlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EASE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,YAAZ;AAAyB,IAAA,SAAS,EAAEV,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,EAUE,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,CADF;AAcD,CAfD;;AAiBA,eAAeiB,GAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nimport \"./App.css\";\nimport PrivateRoute from \"./components/PrivateRoute/PrivateRoute\";\nimport MainPage from \"./scenes/MainPage/MainPage\";\nimport NotFound from \"./scenes/NotFound/NotFound\";\nimport useDidMount from \"./hooks/useDidMount\";\nimport Navbar from \"./containers/Navbar/Navbar\";\nimport LoginPage from \"./scenes/LoginPage/LoginPage\";\nimport Spinner from \"./components/Spinner/Spinner\";\n\n\nconst PrivateRoutes = (props) => {\n  const [isPagePending, setPagePending] = useState(true);\n\n  useDidMount(() => {\n    if (!localStorage.isLoggedIn) {\n      props.history.push('/login');\n    }\n    else {\n      setPagePending(false);\n    }\n  });\n\n  if (isPagePending) {\n    return <Spinner />;\n  }\n\n  return (\n    <div className=\"main-page\">\n      <Navbar />\n\n      <Switch>\n        <Route exact path=\"/\" component={MainPage} />\n\n        <Redirect to=\"/\" />\n      </Switch>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n\n});\n\nconst mapDispatchToProps = {\n\n};\n\nconst ConnectedPrivateRoute = connect(mapStateToProps, mapDispatchToProps)(PrivateRoutes);\n\n\nconst App = () => {\n  return (\n    <Switch>\n      <Route path=\"/login\" component={LoginPage} />\n\n      <PrivateRoute\n        path=\"/\"\n        component={ConnectedPrivateRoute}\n        isAuthenticated={!!localStorage.isLoggedIn}\n      />\n\n      <Route path=\"/not-found\" component={NotFound} />\n      <Redirect to=\"/not-found\" />\n    </Switch>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}